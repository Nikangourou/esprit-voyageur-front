import { Work_Sans, Contrail_One } from "next/font/google";
import "./globals.css";
import LoadShader from "./components/loadShader/loadShader";
import { SocketProvider } from "./context/socketContext";
import FooterBg from "./components/footer/footerBg";

const work_sans = Work_Sans({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-work-sans",
});
const contrail_one = Contrail_One({
  subsets: ["latin"],
  display: "swap",
  weight: "400",
  variable: "--font-contrail-one",
});

import StoreProvider from "./store/storeProvider";
import Blob from "./components/blob/blob";
import React from "react";
export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html
      lang="en"
      className={`${work_sans.variable} ${contrail_one.variable}`}
    >
      <body>
        <StoreProvider>
          <LoadShader />
          <SocketProvider>
            <div className="pageContainer">{children}</div>

            <FooterBg />
          </SocketProvider>
        </StoreProvider>
      </body>
    </html>
  );
}

// <svg
//     id="svg"
//     viewBox={`0 0 ${width} ${height}`}
//     width={width}
//     height={height}
//     // style={{ transform: `translateX(${Math.sin()})` }}
// >
//   {mask && (
//       <defs>
//         <mask id="blob2">
//           <rect x="0" y="0" width={width} height={height} fill={"white"} />{" "}
//           {/*<circle*/}
//           {/*  cx="50"*/}
//           {/*  cy="50"*/}
//           {/*  r="50"*/}
//           {/*  transform={"scale(.5)"}*/}
//           {/*  transformOrigin={"center"}*/}
//           {/*  fill={"black"}*/}
//           {/*/>*/}
//           <path
//               ref={blobPathRef2}
//               transform={"scale(.5)"}
//               transformOrigin={"center"}
//               fill={"black"}
//           />
//         </mask>
//       </defs>
//   )}
//   {/*<circle cx="50" cy="50" r="50" mask={"url(#blob2)"} fill={"red"} />*/}
//   <path
//       id="blob"
//       ref={blobPathRef}
//       fill={dataColor != "none" ? (colorActive ? color : "black") : color}
//       style={{
//         transition: "fill 1s ease-out",
//       }}
//       mask={"url(#blob2)"}
//       data-color={dataColor != "none" ? dataColor : "none"}
//       {...events}
//   />
// </svg>
